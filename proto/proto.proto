syntax = "proto3";

package proto;

option go_package = "hand-in-5/proto/proto";

// protoc --go_out=. --go_opt=paths=source_relative --go-grpc_out=. --go-grpc_opt=paths=source_relative proto/proto.proto

message BidRequest {
  string port = 1;
  int64 amount = 2; 
}

message BidResponse {
  string response = 1;
}

message ResultRequest {

}

message PortMessage {
  string port = 1; 
}

message ResultResponse {
  string response = 1;
}

message NodeUpdate {
  map<string, int64> auctionstate = 1; 
  bool auctionOngoing = 2;
  int64 time = 3;
}

message Empty {

}

service Service {
  rpc PlaceBid (BidRequest) returns (BidResponse);
  rpc AuctionResult (ResultRequest) returns (ResultResponse);
  rpc UpdateNodes (NodeUpdate) returns (Empty);
  rpc CheckPulse (Empty) returns (Empty);
}
